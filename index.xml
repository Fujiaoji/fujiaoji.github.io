<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Fujiao Ji</title>
        <link>http://fujiaoji.github.io/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 24 Jan 2023 11:12:52 -0500</lastBuildDate>
            <atom:link href="http://fujiaoji.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Phishing Detection via Identification of Website Identity</title>
    <link>http://fujiaoji.github.io/posts/phishing-detection-via-identification-of-website-identity/</link>
    <pubDate>Tue, 24 Jan 2023 11:12:52 -0500</pubDate>
    <author>Author</author>
    <guid>http://fujiaoji.github.io/posts/phishing-detection-via-identification-of-website-identity/</guid>
    <description><![CDATA[1. Paper summary The authors proposed an anti-phishing method to protect Internet users from the phishing attacks. Specifically, they first obtained screenshots, then segmented them to get the logos. After that, they utilized Google image database to search and return keywords. Next, they used the keywords to search again, then compare domain name between the query website and the second search domain name.
and retrieval mechanism to identify most similar logos.]]></description>
</item>
<item>
    <title>How to Subplot Pictures to One Figure</title>
    <link>http://fujiaoji.github.io/posts/how-to-subplot-pictures-to-one-figure/</link>
    <pubDate>Wed, 04 Jan 2023 16:22:25 -0600</pubDate>
    <author>Author</author>
    <guid>http://fujiaoji.github.io/posts/how-to-subplot-pictures-to-one-figure/</guid>
    <description><![CDATA[Subplot pictures in one figure:
from PIL import Image import matplotlib.pyplot as plt row_length = 5 column_length = 5 for i in range(row_length): for j in range(column_length): plt.subplot(row_length, column_length, i*5+j+1) im = Image.open(&#34;a.png&#34;) if j == 0: plt.ylabel(&#34;XXX&#34;) plt.yticks([]) plt.xticks([]) plt.imshow(im, cmap=&#39;gray&#39;) plt.tight_layout() plt.savefig(&#34;test.png&#34;) ]]></description>
</item>
<item>
    <title>Useful Tips When Writing Codes on Vscode</title>
    <link>http://fujiaoji.github.io/posts/useful-tips-when-writing-codes-on-vscode/</link>
    <pubDate>Tue, 03 Jan 2023 16:28:09 -0600</pubDate>
    <author>Author</author>
    <guid>http://fujiaoji.github.io/posts/useful-tips-when-writing-codes-on-vscode/</guid>
    <description><![CDATA[ Zip a folder: zip -r destination_folder_name.zip source_folder_name Unzip a folder: unzip source_folder_name.zip -d ./destination_folder_name/. Specifically, ./ means current directory, ../ means parent directory, ~ means home directory, / means root directory. Do not use / directory !!! In linux, terminal, etc., create a new file, touch XXX.cpp ]]></description>
</item>
<item>
    <title>VisualPhishNet Zero Day PhishingWebsite Detection by Visual Similarity</title>
    <link>http://fujiaoji.github.io/posts/visualphishnet-zero-day-phishingwebsite-detection-by-visual-similarity/</link>
    <pubDate>Sat, 31 Dec 2022 22:34:43 -0600</pubDate>
    <author>Author</author>
    <guid>http://fujiaoji.github.io/posts/visualphishnet-zero-day-phishingwebsite-detection-by-visual-similarity/</guid>
    <description><![CDATA[I. Introduction 1. Situation of anti-phishing method Phishing webpages try to deceive paper by high visual similarity between phishing webpage and legistimate ones. Some methods maintain a list of commonly attack pages (domain name and their screenshots). However, these methods have limitations: 1) list is small; 2) attackers can bypass detection by crafting partially similar pshihing pages with different background pictures.
2. Contributions of this paper Present dataset of VisualPhish, 155 trust websites with 9363 pages.]]></description>
</item>
<item>
    <title>Inferring Phishing Intention via Webpage Appearance and Dynamics a Deep Vision Based Approach</title>
    <link>http://fujiaoji.github.io/posts/inferring-phishing-intention-via-webpage-appearance-and-dynamics-a-deep-vision-based-approach/</link>
    <pubDate>Mon, 26 Dec 2022 12:47:05 -0600</pubDate>
    <author>Author</author>
    <guid>http://fujiaoji.github.io/posts/inferring-phishing-intention-via-webpage-appearance-and-dynamics-a-deep-vision-based-approach/</guid>
    <description><![CDATA[I. Introduction 1. Situation of anti-phishing method Manually verified anti-phishing blacklist: use dynamic blacklists to track reported phishing URLs. eg. Google Classification-based methods: trained from collecting phishing dataset, perform binary classification Reference-based methods: detecting phishing attacks by referencing a set of representations of well-known brands. 2. Challenges The blacklists and collected phishing webpages used for training become obsolete very quickly, resulting in a never-ending cat-and-mouse game between phishing attacks and defenses that are based on blacklists/classification.]]></description>
</item>
<item>
    <title>UsefulInformation</title>
    <link>http://fujiaoji.github.io/posts/usefulinformation/</link>
    <pubDate>Mon, 26 Dec 2022 12:23:49 -0600</pubDate>
    <author>Author</author>
    <guid>http://fujiaoji.github.io/posts/usefulinformation/</guid>
    <description><![CDATA[From paper &ldquo;Image similarity using Deep CNN and Curriculum Learning&rdquo; Typical image descriptors: SIFT, LBP, CNN embeddingâ€™s etc; From paper Inferring Phishing Intention via Webpage Appearance and Dynamics: A Deep Vision Based Approach&quot; VisualPhishNet[1] use screenshots [1] [2] and logos [3] [4] [5] as the reference representations of target websites Logo2K+ dataset [6] From paper VisualPhishNet Zero Day PhishingWebsite Detection by Visual Similarity SIFT, SURF, HOG, CCH, ORB, etc. Logo extraction paper: [7], [8] Reference [1] SaharAbdelnabi, Katharina Krombholz, and Mario Fritz VisualPhishNet: Zero-Day Phishing Website Detection by Visual Similarity.]]></description>
</item>
<item>
    <title>Image Similarity Using Deep CNN and Curriculum Learning</title>
    <link>http://fujiaoji.github.io/posts/image-similarity-using-deep-cnn-and-curriculum-learning/</link>
    <pubDate>Mon, 26 Dec 2022 12:18:43 -0600</pubDate>
    <author>Author</author>
    <guid>http://fujiaoji.github.io/posts/image-similarity-using-deep-cnn-and-curriculum-learning/</guid>
    <description><![CDATA[Cannot used&hellip; I. Main Contributions Multi-scale CNN used in a Siamese network. This CNN learns a joint image embedding of top as well as lower layers. Employed a novel online pair mining strategy inspired from Curriculum learning which ensures the model finds better local minima. II. Data Used Supervised ML model, need positive and negative pairs CIFAR10, 32*32 III. SIAMESE NETWORK Share parameters ]]></description>
</item>
<item>
    <title>How to write posts</title>
    <link>http://fujiaoji.github.io/posts/first-post/</link>
    <pubDate>Sat, 24 Dec 2022 23:49:50 -0600</pubDate>
    <author>Author</author>
    <guid>http://fujiaoji.github.io/posts/first-post/</guid>
    <description><![CDATA[ hugo new posts/first-post.md on FujiaoBlog write in content/posts/first-post.md, change draft to false In FujiaoBlog, hugo -t LoveIt cd public/, git add *, git commit -m &quot;XXX&quot;, git push ]]></description>
</item>
</channel>
</rss>
